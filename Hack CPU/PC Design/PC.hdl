/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 * 
 * Author: Naga Kandasamy
 * Date created: July 14, 2020
 * 
 * Student name(s): Kaleb Lefkowitz
 * Date modified: 10/12/2023
 *
 * Notes: Project from the book "The Elements of Computing Systems" by Nisan and Schocken, MIT Press.
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Not(in=inc, out=notinc);
    Or(a=notinc, b=load, out=muxload);
    Mux16(a=PCinc, b=in, sel=muxload, out=temp0);
    Mux16(a=temp0, b=false, sel=reset, out=inReg);

    Or(a=inc, b=load, out=incorload);
    Or(a=incorload, b=reset, out=regload);
    Register(in=inReg, load=regload, out=out, out=PC);
    Inc16(in=PC, out=PCinc);
}
